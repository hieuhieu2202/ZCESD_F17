@{
    Layout = null;
}
<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/png" href="~/Content/Image/fii-logo.jpg">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <title>Lịch sử ESD</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0" />
    <meta charset="UTF-8">
   
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* Custom styles for the header */
        header {
            background-color: #8bc34a;
            color: white;
            padding: 10px 20px;
        }

        .header-left img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 10px;
        }

        /* Table styles */
        table {
            margin-top: 20px;
        }

        /* Colorful background based on the "Full Background" setting */
        .full-background {
            background-color: #8bc34a;
            color: white;
        }

        /* Color options */
        .color-options div {
            width: 20px;
            height: 20px;
            margin-right: 10px;
            border-radius: 50%;
            cursor: pointer;
        }

        .blue {
            background-color: #2196f3;
        }

        .green {
            background-color: #8bc34a;
        }

        .yellow {
            background-color: #ffeb3b;
        }

        .red {
            background-color: #f44336;
        }
    </style>
</head>

<body>

    <!-- Header Section -->
    <header class="d-flex justify-content-between align-items-center">
        <div class="header-left d-flex align-items-center">
            <img src="~/assets/assets/img/logo.png" alt="Logo">
            <span>MBD-AIOT</span>
        </div>

        <!-- Right side with search bar and icons -->
        <div class="header-right d-flex align-items-center">
            <input id="searchInput" type="text" class="form-control mr-2" placeholder="Search" style="border-radius: 20px;">
            <div class="icon mr-3" style="cursor: pointer;">&#x21bb;</div>
            <div class="icon mr-3" style="cursor: pointer;">&#9776;</div>
            <div class="icon" style="cursor: pointer;">&#9881;</div>
        </div>
    </header>

    <!-- Color Options -->
    <div class="color-options d-flex align-items-center m-3">
        <label for="toggleFullBackground">Full Background:</label>
        <input type="checkbox" id="toggleFullBackground">
        <div class="blue" data-color="#2196f3"></div>
        <div class="green" data-color="#8bc34a"></div>
        <div class="yellow" data-color="#ffeb3b"></div>
        <div class="red" data-color="#f44336"></div>
    </div>

    <!-- Table Section -->
    <div class="container">
        <table class="table table-bordered" id="dataTable">
            <thead class="thead-light">
                <tr>
                    <th data-column="col1" data-order="asc">Mã thẻ</th>
                    <th data-column="col2" data-order="asc">Họ tên</th>
                    <th data-column="col3" data-order="asc">Bộ phận</th>
                    <th data-column="col4" data-order="asc">Trạng thái</th>
                    <th data-column="col4" data-order="asc">Mô tả</th>
                    <th data-column="col4" data-order="asc">Thời gian</th>
                </tr>
            </thead>
            <tbody id="tableBody">
                <!-- Data will be dynamically inserted here -->
            </tbody>
        </table>
    </div>

    <!-- Pagination Section -->
    <footer>
        <div class="container">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    <li class="page-item">
                        <button id="prevPage" class="page-link" disabled>&laquo; Prev</button>
                    </li>
                    <li class="page-item">
                        <button id="nextPage" class="page-link">Next &raquo;</button>
                    </li>
                </ul>
            </nav>
        </div>
    </footer>
    

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        // JavaScript to handle the color change
        const header = document.querySelector('header');
        const table = document.getElementById('dataTable');
        const colorOptions = document.querySelectorAll('.color-options div');
        const fullBackgroundToggle = document.getElementById('toggleFullBackground');

        // Pagination variables
        const tableBody = document.getElementById('tableBody');
        const prevPageButton = document.getElementById('prevPage');
        const nextPageButton = document.getElementById('nextPage');
        const searchInput = document.getElementById('searchInput');
        const rowsPerPage = 16; // Number of rows per page
        let currentPage = 1;
        let data = [];
        let filteredData = []; //Để giữ dữ liệu đã lọc dựa trên đầu vào tìm kiếm

        // Function to generate dummy data
        $(document).ready(function () {
            $.ajax({
                url: '/Dashboard/GetEmployeeData', // Thay thế bằng URL API của bạn
                type: 'GET',
                success: function (response) {
                    if (response.Status === "OK" && response.Code === 200) {

                        data = response.Result; // Lưu dữ liệu vào biến `data`
                       // console.log(data);
                        displayPage(currentPage); // Hiển thị trang đầu tiên
                    } else {
                        console.error("Error fetching data: " + response.Message);
                    }
                },
                error: function (error) {
                    console.error("API request failed", error);
                }
            });
        });

        // Function to display data for the current page/ Hàm này để hiện dữ liệu cho trang hiện tại 
        function displayPage(page) {
            tableBody.innerHTML = '';
            const start = (page - 1) * rowsPerPage;
            const end = start + rowsPerPage;
            const pageData = filteredData.length > 0 ? filteredData.slice(start, end) : data.slice(start, end);

            pageData.forEach(row => {
                const rowElement = document.createElement('tr');
                rowElement.innerHTML = `
            <td>${row.MaThe}</td>
            <td>${row.HoTen}</td>
            <td>${row.TenBoPhan}</td>
            <td>${row.ErrorCode}</td>
            <td>${row.Status}</td>
            <td>${row.ThoiGian}</td>
        `;
                tableBody.appendChild(rowElement);
            });

            // Disable buttons if on the first or last page
            prevPageButton.disabled = page === 1;
            nextPageButton.disabled = end >= (filteredData.length > 0 ? filteredData.length : data.length);
        }

        // Pagination event listeners
        prevPageButton.addEventListener('click', function () {
            currentPage--;
            displayPage(currentPage);
        });

        nextPageButton.addEventListener('click', function () {
            currentPage++;
            displayPage(currentPage);
        });

        // Sorting function
        function sortData(column, order) {
            data.sort((a, b) => {
                if (a[column] < b[column]) return order === 'asc' ? -1 : 1;
                if (a[column] > b[column]) return order === 'asc' ? 1 : -1;
                return 0;
            });
        }

        // Event listeners for sorting
        const headers = document.querySelectorAll('th');
        headers.forEach(header => {
            header.addEventListener('click', function () {
                const column = header.getAttribute('data-column');
                const order = header.getAttribute('data-order');
                sortData(column, order);
                header.setAttribute('data-order', order === 'asc' ? 'desc' : 'asc'); // Toggle order
                displayPage(currentPage);
            });
        });

        // Change color functionality
        colorOptions.forEach(option => {
            option.addEventListener('click', function () {
                const color = this.getAttribute('data-color');
                header.style.backgroundColor = color;
                table.style.backgroundColor = color;
            });
        });

        // Full background toggle
        fullBackgroundToggle.addEventListener('change', function () {
            if (this.checked) {
                document.body.classList.add('full-background');
            } else {
                document.body.classList.remove('full-background');
            }
        });

        function filterData(searchTerm) {
            filteredData = data.filter(row => {
                return Object.values(row).some(value =>
                    value.toLowerCase().includes(searchTerm.toLowerCase())
                );
            });
            currentPage = 1; // Reset to the first page after filtering
            displayPage(currentPage);
        }

        // Search event listener
        searchInput.addEventListener('input', () => {
            const searchTerm = searchInput.value;
            filterData(searchTerm);
        });
        displayPage(currentPage);
    </script>
</body>

</html>
